type User {
  id: ID!
  createdAt: String!
  email: String!
  password: String!
  name: String!
  age: Int!
  posts: [Post!]
  following: [User]
}

type Post {
  id: ID!
  createdAt: String!
  postedBy: User!
  content: String!
}

type AuthPayload {
  token: String
  user: User
}

type Query {
  users: [User!]!
  user(id: ID!): User
  posts: [Post!]!
  userPosts(id: ID!): [Post!]!
  userFollowing(id: ID!): [User!]!
}

type Mutation {
  createUser(name: String!, age: Int!): User!
  createPost(userId: ID!, content: String!): Post!
  followUser(userId: ID!, follow: ID!): User!
  unfollowUser(userId: ID!, unfollow: ID!): User!
  signup(email: String!, password: String!, name: String!, age: Int): AuthPayload
  login(email: String!, password: String!): AuthPayload
}
